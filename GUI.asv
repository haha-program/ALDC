function varargout = GUI(varargin)
% GUI MATLAB code for GUI.fig
%      GUI, by itself, creates a new GUI or raises the existing
%      singleton*.
%
%      H = GUI returns the handle to a new GUI or the handle to
%      the existing singleton*.
%
%      GUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in GUI.M with the given input arguments.
%
%      GUI('Property','Value',...) creates a new GUI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before GUI_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to GUI_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help GUI

% Last Modified by GUIDE v2.5 11-Feb-2020 09:41:11

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @GUI_OpeningFcn, ...
                   'gui_OutputFcn',  @GUI_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT
end

% --- Executes just before GUI is made visible.
function GUI_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to GUI (see VARARGIN)

% Choose default command line output for GUI
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);
end

% UIWAIT makes GUI wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = GUI_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;
end


% --- Executes on button press in LoadData.
function LoadData_Callback(hObject, eventdata, handles)
% hObject    handle to LoadData (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global data
[FileName,PathName] = uigetfile({'*.csv;*.xls;*.xlsx'}, 'File Selector');

flag = 0;
if (FileName~=0 | PathName~=0)
switch FileName
            case  'twentyDecision.xlsx'
                k = 20;
                op=0.03;
            case  'fourtyDecision.xlsx'
                k = 40;
                op=0.1;
            case 'D31Decision.xlsx'
                k = 31;
                op=0.05;
            case 'led7digitDecision.xlsx'
                k = 10;
                op=0.1;
            case 'movementlibrasDecision.xlsx'
                k = 15;
                op=0.1;
            case 'optdigitsDecision.xlsx'
                k = 10;
                op=0.01;
            case 'textureDecision.xlsx'
                k = 11;
                op=0.01;
            case 'vowelDecision.xlsx'
                k = 11;
                op=0.07;
            case 'yeastDecision.xlsx'
                k=10;
                op=0.05;
            case 'penbasedDecision.xlsx'
                k=10;
                op=0.01;
                 otherwise
                flag = 1;
                op = '###';
end
str = [PathName,FileName];
    data = xlsread(str);
    datasize = size(data);
    %½«Â·¾¶Ð´Èëpath
    set(handles.path,'string',str);
    set(handles.dataName, 'string', FileName);
    set(handles.dataNumber, 'string',int2str(datasize(1)));
    set(handles.dataAttribute, 'string',int2str(datasize(2)-1));
    set(handles.dataClass, 'string',int2str(k));
    set(handles.op, 'string',num2str(op));
end
end



function path_Callback(hObject, eventdata, handles)
% hObject    handle to path (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of path as text
%        str2double(get(hObject,'String')) returns contents of path as a double

end
function path_CreateFcn(hObject, eventdata, handles)
% hObject    handle to path (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

end


% --- Executes on button press in text1.
function pushbutton4_Callback(hObject, eventdata, handles)
% hObject    handle to text1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
end


% --- Executes on button press in run.
function run_Callback(hObject, eventdata, handles)
% hObject    handle to run (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global data
global cluster_ratio

h = msgbox('Please waite......', '', 'warn');
[ave_F_measure,ave_cost] = ALDC_func(data,cluster_ratio);
close(h)
msgbox('Process finished.', '', 'warn');

set(handles.ave_F_measure, 'string', ave_F_measure)
set(handles.ave_cost, 'string', ave_cost)
end

% --- Executes on button press in close.
function close_Callback(hObject, eventdata, handles)
% hObject    handle to close (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
close
end




function cluster_ratio_Callback(hObject, eventdata, handles)
% hObject    handle to cluster_ratio (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of cluster_ratio as text
%        str2double(get(hObject,'String')) returns contents of cluster_ratio as a double
global cluster_ratio
cluster_ratio = str2double(get(handles.cluster_ratio,'String'));
end
function cluster_ratio_CreateFcn(hObject, eventdata, handles)
% hObject    handle to dc (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
end

function help_Callback(hObject, eventdata, handles)
helptitle = 'ALDC algorithm help documentation';
helptext = [
    'Project:          Cost-sensitive active learning for multi-class imbalanced data.                                   '
    'Written time:     February 10, 2020.                                                                                                    '
    'Last modify time: February 11, 2020.                                                                                                    '
    '                                                                                                                                       '
    'This is the help document of our paper "Cost-sensitive active learning for multi-class imbalanced data".            '
    '                                                                                                                                       '     
    'Here are the explanation of settings.                                                                                                  '
    '                                                                                                                                       '
    '--Dataset information                                                                                                                  '
    'Dataset format:   Please input a file : xls, csv or xlsx format.                                                                       '
    'Name:   The name of the dataset file.                                                                                                  '
    'Instances:   The number of dataset instances.                                                                                '
    'Attributes:  Number of attributes in the dataset.                                                                            '
    'Classes:      Number of classes in the dataset. '
    '--Input'
    'cluster_ratio:  Determine the maximum number of clusters.'
];
helpwin(helptext, helptitle);
% hObject    handle to help (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
end
